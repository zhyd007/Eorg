{"version":3,"sources":["components/Highlight.js","components/TeX/TeXBlock.js","components/Table/ModalTable.js","components/Table/TableBlock.js","components/BlockComponent.js","components/TeX/modifiers/removeTeXBlock.js","components/TeX/modifiers/insertTeXBlock.js","components/Table/modifiers/createTable.js","components/RichTextEditor.js","App.js","serviceWorker.js","index.js"],"names":["highlightCallBack","document","querySelectorAll","forEach","block","hljs","highlightBlock","KaTexOutput","content","onClick","container","React","useRef","prevProps","value","ref","useEffect","current","usePrevious","katex","render","displayMode","TeXBlock","props","state","editMode","textareaRef","createRef","setState","texValue","getValue","startEdit","onValueChange","evt","target","invalid","__parse","e","invalidTeX","save","entityKey","getEntityAt","newContentState","contentState","mergeEntityData","finishEdit","bind","remove","blockProps","onRemove","getKey","onStartEdit","onFinishEdit","this","getEntity","getData","texContent","className","editPanel","buttonClass","onChange","disabled","type","Component","tableShape","ModalTable","buttonLabel","useState","modal","setModal","rowRef","columnRef","captionRef","toggle","color","Modal","isOpen","ModalHeader","ModalBody","Form","Row","form","Col","md","FormGroup","Label","for","Input","name","id","innerRef","ModalFooter","Button","tableData","row","column","caption","push","T","onDoubleClick","map","metadata","rows","rowsTh","cols","colsTh","i","key","TableBlock","BlockComponent","media","getType","removeTeXBlock","editorState","blockKey","getCurrentContent","getBlockForKey","targetRange","SelectionState","anchorKey","anchorOffset","focusKey","focusOffset","getLength","withoutTeX","Modifier","removeRange","resetBlock","setBlockType","getSelectionAfter","newState","EditorState","forceSelection","insertTeXBlock","contentStateWithEntity","createEntity","getLastCreatedEntityKey","newEditorState","set","currentContent","AtomicBlockUtils","insertAtomicBlock","createTable","RichTextEditor","blockRenderer","component","editable","liveTeXEdits","createWithContent","removeTeX","insertTeX","prevState","Map","createEmpty","editorRef","focus","handleKeyCommand","mapKeyToEditorCommand","toggleBlockType","toggleInlineStyle","command","RichUtils","keyCode","getDefaultKeyBinding","onTab","blockType","inlineStyle","hasText","getBlockMap","first","displayTeX","tex","listHTML","length","getElementById","innerHTML","onToggle","editorContentRaw","convertToRaw","allTeX","offset","someTeX","blocks","Math","someMath","entityMap","Object","keys","values","data","count","k","TeX","styledStartOffset","someTeXInlineStyleSort","someTeXInline","inlineStyleRanges","o","sort","a","b","j","text","texMap","startOffset","styledTextLength","textStyle","style","slice","blockRendererFn","blockStyleFn","getBlockStyle","customStyleMap","styleMap","keyBindingFn","placeholder","readOnly","spellCheck","BOLD","ITALIC","UNDERLINE","CODE","backgroundColor","fontFamily","fontSize","padding","StyleButton","active","onMouseDown","preventDefault","label","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getStartKey","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ceac3d02.chunk.js","sourcesContent":["import hljs from 'highlight.js'\nimport 'highlight.js/styles/zenburn.css'\n\nconst highlightCallBack = () => {\n\tdocument.querySelectorAll('pre code')\n\t\t.forEach((block) => hljs.highlightBlock(block))\n}\n\nexport default highlightCallBack\n","import katex from 'katex'\nimport React from 'react'\n\nconst KaTexOutput = ({ content, onClick }) => {\n\tconst container = React.useRef(null)\n\tconst prevProps = usePrevious(content)\n\n\tReact.useEffect(() => {\n\t\tif (prevProps !== content) {\n\t\t\tupdate()\n\t\t}\n\t})\n\n\tfunction usePrevious(value) {\n\t\tconst ref = React.useRef(null)\n\t\tReact.useEffect(() => {\n\t\t\tref.current = value\n\t\t})\n\t\treturn ref.current\n\t}\n\n\tfunction update() {\n\t\tkatex.render(\n\t\t\tcontent,\n\t\t\tcontainer.current,\n\t\t\t{ displayMode: true },\n\t\t)\n\t}\n\n\treturn <div ref={container} onClick={onClick} />\n}\n\nclass TeXBlock extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { editMode: false }\n\t\tthis.textareaRef = React.createRef()\n\n\t\tthis.onClick = () => {\n\t\t\tif (this.state.editMode) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\teditMode: true,\n\t\t\t\ttexValue: this.getValue(),\n\t\t\t}, () => {\n\t\t\t\tthis.startEdit()\n\t\t\t})\n\t\t}\n\n\t\tthis.onValueChange = (evt) => {\n\t\t\tconst { value } = evt.target\n\t\t\tlet invalid = false\n\t\t\ttry {\n\t\t\t\tkatex.__parse(value)\n\t\t\t} catch (e) {\n\t\t\t\tinvalid = true\n\t\t\t} finally {\n\t\t\t\tthis.setState({\n\t\t\t\t\tinvalidTeX: invalid,\n\t\t\t\t\ttexValue: value,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tthis.save = () => {\n\t\t\tconst entityKey = this.props.block.getEntityAt(0)\n\t\t\tconst newContentState = this.props.contentState.mergeEntityData(\n\t\t\t\tentityKey,\n\t\t\t\t{ content: this.state.texValue },\n\t\t\t)\n\t\t\tthis.setState({\n\t\t\t\tinvalidTeX: false,\n\t\t\t\teditMode: false,\n\t\t\t\ttexValue: null,\n\t\t\t}, this.finishEdit.bind(this, newContentState))\n\t\t}\n\n\t\tthis.remove = () => {\n\t\t\tthis.props.blockProps.onRemove(this.props.block.getKey())\n\t\t}\n\t\tthis.startEdit = () => {\n\t\t\tthis.props.blockProps.onStartEdit(this.props.block.getKey())\n\t\t}\n\t\tthis.finishEdit = (newContentState) => {\n\t\t\tthis.props.blockProps.onFinishEdit(\n\t\t\t\tthis.props.block.getKey(),\n\t\t\t\tnewContentState,\n\t\t\t)\n\t\t}\n\t}\n\n\tgetValue() {\n\t\treturn this.props.contentState\n\t\t\t.getEntity(this.props.block.getEntityAt(0))\n\t\t\t.getData().content\n\t}\n\n\trender() {\n\t\tlet texContent = null\n\t\tif (this.state.editMode) {\n\t\t\tif (this.state.invalidTeX) {\n\t\t\t\ttexContent = ''\n\t\t\t} else {\n\t\t\t\ttexContent = this.state.texValue\n\t\t\t}\n\t\t} else {\n\t\t\ttexContent = this.getValue()\n\t\t}\n\n\t\tlet className = 'TeXEditor-tex'\n\t\tif (this.state.editMode) {\n\t\t\tclassName += ' TeXEditor-activeTeX'\n\t\t}\n\n\t\tlet editPanel = null\n\t\tif (this.state.editMode) {\n\t\t\tlet buttonClass = 'TeXEditor-saveButton'\n\t\t\tif (this.state.invalidTeX) {\n\t\t\t\tbuttonClass += ' TeXEditor-invalidButton'\n\t\t\t}\n\n\t\t\teditPanel = (\n\t\t\t\t<div className=\"TeXEditor-panel\">\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"TeXEditor-texValue\"\n\t\t\t\t\t\tonChange={this.onValueChange}\n\t\t\t\t\t\tref={this.textareaRef.current}\n\t\t\t\t\t\tvalue={this.state.texValue}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"TeXEditor-buttons\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={buttonClass}\n\t\t\t\t\t\t\tdisabled={this.state.invalidTeX}\n\t\t\t\t\t\t\tonClick={this.save}\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.state.invalidTeX ? 'Invalid TeX' : 'Done'}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"TeXEditor-removeButton\"\n\t\t\t\t\t\t\tonClick={this.remove}\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRemove\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={className}>\n\t\t\t\t<KaTexOutput content={texContent} onClick={this.onClick} />\n\t\t\t\t{editPanel}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default TeXBlock\n","import React, { useState } from 'react'\nimport {\n\tButton, Modal, ModalHeader, ModalBody, ModalFooter,\n\tCol, Row, Form, FormGroup, Label, Input,\n} from 'reactstrap'\n\nexport const tableShape = []\n\nconst ModalTable = (props) => {\n\tconst {\n\t\tbuttonLabel,\n\t\tclassName,\n\t\tonClick,\n\t} = props\n\n\tconst [modal, setModal] = useState(false)\n\tconst rowRef = React.useRef(null)\n\tconst columnRef = React.useRef(null)\n\tconst captionRef = React.useRef(null)\n\n\tconst toggle = () => setModal(!modal)\n\n\tconst handleClick = () => {\n\t\tconst tableData = {\n\t\t\trow: rowRef.current.value,\n\t\t\tcolumn: columnRef.current.value,\n\t\t\tcaption: captionRef.current.value,\n\t\t}\n\t\ttableShape.push(tableData)\n\t\tonClick()\n\t\ttoggle()\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<button color=\"danger\" onClick={toggle} type=\"button\" className=\"math RichEditor-styleButton\">{buttonLabel}</button>\n\t\t\t<Modal isOpen={modal} toggle={toggle} className={className}>\n\t\t\t\t<ModalHeader toggle={toggle}>Modal title</ModalHeader>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<Row form>\n\t\t\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t<Label for=\"tableRow\">Row</Label>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"row\"\n\t\t\t\t\t\t\t\t\t\tid=\"tableRow\"\n\t\t\t\t\t\t\t\t\t\tinnerRef={rowRef}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t<Label for=\"tableColumn\">Column</Label>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"column\"\n\t\t\t\t\t\t\t\t\t\tid=\"tableColumn\"\n\t\t\t\t\t\t\t\t\t\tinnerRef={columnRef}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row form>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t<Label for=\"tableTitle\">Title</Label>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\t\t\tid=\"tableTitle\"\n\t\t\t\t\t\t\t\t\t\tinnerRef={captionRef}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Form>\n\t\t\t\t</ModalBody>\n\t\t\t\t<ModalFooter>\n\t\t\t\t\t<Button color=\"primary\" onClick={handleClick}>\n\t\t\t\t\t\tYes\n\t\t\t\t\t</Button>\n\t\t\t\t\t{' '}\n\t\t\t\t\t<Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t</>\n\t)\n}\n\nexport default ModalTable\n","import React from 'react'\nimport { tableShape } from './ModalTable'\n\nconst T = (props) => {\n\tconst { onDoubleClick } = props\n\tconst container = React.useRef(null)\n\n\t/**\n\t * if rowNum === 1\n\t *  tBody = (thead>tr>th*colNum{heading $})\n\t *      +\n\t *          (tbody>tr*rowNum - 1>td*colNum{cell $})\n\t * else\n\t *  tBody = tbody>tr*rowNum>td*colNum{cell $}\n\t */\n\n\treturn tableShape.map((metadata) => {\n\t\tconst rows = []\n\t\tconst rowsTh = []\n\t\tconst cols = []\n\t\tconst colsTh = []\n\n\t\t// colsTh\n\t\tfor (let i = 0; i < metadata.column; i += 1) {\n\t\t\tcolsTh.push(<th key={i}>heading</th>)\n\t\t}\n\n\t\t// rowsTh\n\t\trowsTh.push(\n\t\t\t<thead key=\"hhh\">\n\t\t\t\t<tr>{colsTh}</tr>\n\t\t\t</thead>,\n\t\t)\n\n\t\t// tbody\n\t\tif (metadata.row > 1) {\n\t\t\tfor (let i = 0; i < metadata.column; i += 1) {\n\t\t\t\tcols.push(<td key={i}>cell</td>)\n\t\t\t}\n\t\t\tfor (let i = 1; i < metadata.row; i += 1) {\n\t\t\t\trows.push(<tr key={i}>{cols}</tr>)\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<table className=\"hoverTable\" onDoubleClick={onDoubleClick} ref={container}>\n\t\t\t\t<caption>{metadata.caption}</caption>\n\t\t\t\t{rowsTh}\n\t\t\t\t<tbody>{rows}</tbody>\n\t\t\t</table>\n\t\t)\n\t})\n}\n\nclass TableBlock extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.onDoubleClick = () => {\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<T\n\t\t\t\t\tonDoubleClick={this.onDoubleClick}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default TableBlock\n","import React from 'react'\nimport TeXBlock from './TeX/TeXBlock'\nimport TableBlock from './Table/TableBlock'\n\nconst BlockComponent = (props) => {\n\tconst entity = props.contentState.getEntity(\n\t\tprops.block.getEntityAt(0),\n\t)\n\tconst type = entity.getType()\n\n\tlet media\n\tif (type === 'TOKEN') {\n\t\tmedia = (\n\t\t\t<TeXBlock\n\t\t\t\tblockProps={props.blockProps}\n\t\t\t\tblock={props.block}\n\t\t\t\tcontentState={props.contentState}\n\t\t\t/>\n\t\t)\n\t} else if (type === 'TABLE') {\n\t\tmedia = (\n\t\t\t<TableBlock\n\t\t\t\tblockProps={props.blockProps}\n\t\t\t\tblock={props.block}\n\t\t\t\tcontentState={props.contentState}\n\t\t\t/>\n\t\t)\n\t}\n\n\treturn media\n}\n\nexport default BlockComponent\n","import { EditorState, Modifier, SelectionState } from 'draft-js'\n\nfunction removeTeXBlock(editorState, blockKey) {\n\tconst content = editorState.getCurrentContent()\n\tconst block = content.getBlockForKey(blockKey)\n\n\tconst targetRange = new SelectionState({\n\t\tanchorKey: blockKey,\n\t\tanchorOffset: 0,\n\t\tfocusKey: blockKey,\n\t\tfocusOffset: block.getLength(),\n\t})\n\n\tconst withoutTeX = Modifier.removeRange(content, targetRange, 'backward')\n\tconst resetBlock = Modifier.setBlockType(\n\t\twithoutTeX,\n\t\twithoutTeX.getSelectionAfter(),\n\t\t'unstyled',\n\t)\n\n\tconst newState = EditorState.push(editorState, resetBlock, 'remove-range')\n\treturn EditorState.forceSelection(newState, resetBlock.getSelectionAfter())\n}\n\nexport default removeTeXBlock\n","import {\n\tAtomicBlockUtils,\n\tEditorState,\n} from 'draft-js'\n\nconst examples = '\\\\KaTeX'\n\nfunction insertTeXBlock(editorState) {\n\tconst contentState = editorState.getCurrentContent()\n\tconst contentStateWithEntity = contentState.createEntity(\n\t\t'TOKEN',\n\t\t'IMMUTABLE',\n\t\t{ content: examples },\n\t)\n\tconst entityKey = contentStateWithEntity.getLastCreatedEntityKey()\n\tconst newEditorState = EditorState.set(\n\t\teditorState,\n\t\t{ currentContent: contentStateWithEntity },\n\t)\n\treturn AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, ' ')\n}\n\nexport default insertTeXBlock\n","import {\n\tAtomicBlockUtils,\n\tEditorState,\n} from 'draft-js'\n\nfunction createTable(editorState) {\n\tconst contentState = editorState.getCurrentContent()\n\tconst contentStateWithEntity = contentState.createEntity(\n\t\t'TABLE',\n\t\t'IMMUTABLE',\n\t\t{ content: '' },\n\t)\n\tconst entityKey = contentStateWithEntity.getLastCreatedEntityKey()\n\tconst newEditorState = EditorState.set(\n\t\teditorState,\n\t\t{ currentContent: contentStateWithEntity },\n\t)\n\treturn AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, ' ')\n}\n\nexport default createTable\n","import React from 'react'\nimport {\n\tEditor, EditorState, getDefaultKeyBinding, RichUtils, convertToRaw,\n} from 'draft-js'\nimport './RichTextEditor.css'\nimport 'draft-js/dist/Draft.css'\nimport { Map } from 'immutable'\nimport highlightCallBack from './Highlight'\nimport BlockComponent from './BlockComponent'\nimport removeTeXBlock from './TeX/modifiers/removeTeXBlock'\nimport insertTeXBlock from './TeX/modifiers/insertTeXBlock'\nimport createTable from './Table/modifiers/createTable'\nimport ModalTable from './Table/ModalTable'\nimport './TeX/TeXEditor.css'\nimport './Table/Table.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n/**\n * Editor Template and KaTeX support are all referenced to Draft.js official example.\n */\n\nclass RichTextEditor extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\teditorState: EditorState.createEmpty(),\n\t\t\tliveTeXEdits: Map(),\n\t\t}\n\n\t\tthis.editorRef = React.createRef()\n\t\tthis.focus = () => this.editorRef.current.focus()\n\t\tthis.onChange = (editorState) => this.setState({ editorState })\n\n\t\tthis.handleKeyCommand = this.handleKeyCommand.bind(this)\n\t\tthis.mapKeyToEditorCommand = this.mapKeyToEditorCommand.bind(this)\n\t\tthis.toggleBlockType = this.toggleBlockType.bind(this)\n\t\tthis.toggleInlineStyle = this.toggleInlineStyle.bind(this)\n\t}\n\n\tblockRenderer = (block) => {\n\t\tif (block.getType() === 'atomic') {\n\t\t\treturn {\n\t\t\t\tcomponent: BlockComponent,\n\t\t\t\teditable: false,\n\t\t\t\tprops: {\n\t\t\t\t\tonStartEdit: (blockKey) => {\n\t\t\t\t\t\tconst { liveTeXEdits } = this.state\n\t\t\t\t\t\tthis.setState({ liveTeXEdits: liveTeXEdits.set(blockKey, true) })\n\t\t\t\t\t},\n\t\t\t\t\tonFinishEdit: (blockKey, newContentState) => {\n\t\t\t\t\t\tconst { liveTeXEdits } = this.state\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tliveTeXEdits: liveTeXEdits.remove(blockKey),\n\t\t\t\t\t\t\teditorState: EditorState.createWithContent(newContentState),\n\t\t\t\t\t\t})\n\t\t\t\t\t},\n\t\t\t\t\tonRemove: (blockKey) => this.removeTeX(blockKey),\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\t\treturn null\n\t};\n\n\tonChange = (editorState) => this.setState({ editorState });\n\n\tremoveTeX = (blockKey) => {\n\t\tconst { editorState, liveTeXEdits } = this.state\n\t\tthis.setState({\n\t\t\tliveTeXEdits: liveTeXEdits.remove(blockKey),\n\t\t\teditorState: removeTeXBlock(editorState, blockKey),\n\t\t})\n\t};\n\n\tinsertTeX = () => {\n\t\tthis.setState((prevState) => ({\n\t\t\tliveTeXEdits: Map(),\n\t\t\teditorState: insertTeXBlock(prevState.editorState),\n\t\t}))\n\t};\n\n\tcreateTable = () => {\n\t\tthis.setState((prevState) => ({\n\t\t\teditorState: createTable(prevState.editorState),\n\t\t}))\n\t}\n\n\thandleKeyCommand(command, editorState) {\n\t\tconst newState = RichUtils.handleKeyCommand(editorState, command)\n\t\tif (newState) {\n\t\t\tthis.onChange(newState)\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tmapKeyToEditorCommand(e) {\n\t\tif (e.keyCode === 9 /* TAB */) {\n\t\t\tconst newEditorState = RichUtils.onTab(\n\t\t\t\te,\n\t\t\t\tthis.state.editorState,\n\t\t\t\t4, /* maxDepth */\n\t\t\t)\n\t\t\tif (newEditorState !== this.state.editorState) {\n\t\t\t\tthis.onChange(newEditorState)\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\t// eslint-disable-next-line consistent-return\n\t\treturn getDefaultKeyBinding(e)\n\t}\n\n\ttoggleBlockType(blockType) {\n\t\tthis.onChange(\n\t\t\tRichUtils.toggleBlockType(\n\t\t\t\tthis.state.editorState,\n\t\t\t\tblockType,\n\t\t\t),\n\t\t)\n\t}\n\n\ttoggleInlineStyle(inlineStyle) {\n\t\tthis.onChange(\n\t\t\tRichUtils.toggleInlineStyle(\n\t\t\t\tthis.state.editorState,\n\t\t\t\tinlineStyle,\n\t\t\t),\n\t\t)\n\t}\n\n\trender() {\n\t\tconst { editorState } = this.state\n\n\t\t// If the user changes block type before entering any text, we can\n\t\t// either style the placeholder or hide it. Let's just hide it now.\n\t\tlet className = 'RichEditor-editor'\n\t\tconst contentState = editorState.getCurrentContent()\n\t\tif (!contentState.hasText()) {\n\t\t\tif (contentState.getBlockMap().first().getType() !== 'unstyled') {\n\t\t\t\tclassName += ' RichEditor-hidePlaceholder'\n\t\t\t}\n\t\t}\n\n\t\tconst convertToTeX = () => {\n\t\t\tconst editorContentRaw = convertToRaw(contentState)\n\n\t\t\tconst allTeX = []\n\t\t\tlet offset = 0\n\t\t\tlet length = 0\n\t\t\tconst\n\t\t\t\tsomeTeX = editorContentRaw.blocks\n\t\t\tconst Math = []\n\t\t\tconst\n\t\t\t\tsomeMath = editorContentRaw.entityMap\n\n\t\t\t// Blocks Processing\n\t\t\tif (Object.keys(someMath).length) {\n\t\t\t\tfor (let i = 0; i < Object.keys(someMath).length; i += 1) { // Iterating <entityMap> ...\n\t\t\t\t\tif (someMath[i].type === 'TOKEN') {\n\t\t\t\t\t\tMath.push(Object.values(someMath)[i].data.content)\n\t\t\t\t\t} else if (someMath[i].type === 'table') {\n\t\t\t\t\t\t// TODO table\n\n\t\t\t\t\t\tMath.push('sorry, but the table feature has not finished !!!')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet count = 0\n\n\t\t\t/**\n\t\t\t * TODO optimization\n\t\t\t *  -- Oops!!!\n\t\t\t *  O(n^3) algorithm\n\t\t\t */\n\n\t\t\tfor (let k = 0; k < someTeX.length; k += 1) { // Iterating <blocks> ...\n\t\t\t\tlet TeX = ''\n\t\t\t\tconst styledStartOffset = []\n\t\t\t\tconst\n\t\t\t\t\tsomeTeXInlineStyleSort = []\n\t\t\t\tconst someTeXInline = someTeX[k].inlineStyleRanges\n\n\t\t\t\tfor (let i = 0; i < someTeXInline.length; i += 1) {\n\t\t\t\t\tconst o = someTeXInline[i].offset\n\t\t\t\t\tstyledStartOffset.push(o)\n\t\t\t\t}\n\n\t\t\t\tstyledStartOffset.sort((a, b) => a - b)\n\n\t\t\t\tfor (let i = 0; i < styledStartOffset.length; i += 1) {\n\t\t\t\t\tfor (let j = 0; j < Object.values(someTeXInline).length; j += 1) {\n\t\t\t\t\t\tif (Object.values(someTeXInline)[j].offset === styledStartOffset[i]) {\n\t\t\t\t\t\t\tsomeTeXInlineStyleSort.push(Object.values(someTeXInline)[j])\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * ** text split algorithm **\n\t\t\t\t * split with inlineStyledText offset and its length\n\t\t\t\t */\n\n\t\t\t\tif (someTeXInline.length === 0) {\n\t\t\t\t\tif (someTeX[k].type === 'unstyled') {\n\t\t\t\t\t\tTeX += someTeX[k].text\n\t\t\t\t\t} else if (someTeX[k].type === 'atomic') {\n\t\t\t\t\t\tsomeTeX[k].text = Math[count]\n\t\t\t\t\t\tTeX += someTeX[k].text\n\t\t\t\t\t\tcount += 1\n\t\t\t\t\t} else {\n\t\t\t\t\t\tTeX += `${texMap[someTeX[k].type]}{${someTeX[k].text}}`\n\t\t\t\t\t}\n\t\t\t\t\tTeX += '<br />'\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = 0; i < someTeXInlineStyleSort.length; i += 1) {\n\t\t\t\t\t\tconst startOffset = styledStartOffset[i]\n\t\t\t\t\t\tconst styledTextLength = someTeXInlineStyleSort[i].length\n\t\t\t\t\t\tconst textStyle = someTeXInlineStyleSort[i].style\n\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\tTeX += someTeX[k].text.slice(0, startOffset)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tTeX += someTeX[k].text.slice(offset + length, startOffset)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tTeX += `${texMap[textStyle]}{${someTeX[k].text.slice(startOffset, startOffset + styledTextLength)}}`\n\n\t\t\t\t\t\tif (i === someTeXInlineStyleSort.length - 1) {\n\t\t\t\t\t\t\tTeX += `${someTeX[k].text.slice(startOffset + styledTextLength)}<br/>`\n\t\t\t\t\t\t}\n\t\t\t\t\t\toffset = startOffset\n\t\t\t\t\t\tlength = styledTextLength\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tallTeX.push(TeX)\n\t\t\t}\n\n\t\t\tdisplayTeX(allTeX)\n\t\t}\n\n\t\tconst displayTeX = (tex) => {\n\t\t\tlet listHTML = '<pre><code class=\"latex\">'\n\t\t\tfor (let i = 0; i < tex.length; i += 1) {\n\t\t\t\tconst note = tex[i]\n\t\t\t\tlistHTML += note\n\t\t\t}\n\t\t\tlistHTML += '</code></pre>'\n\t\t\tdocument.getElementById('tex').innerHTML = listHTML\n\t\t\thighlightCallBack()\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"double-column\">\n\t\t\t\t<div className=\"RichEditor-root\">\n\t\t\t\t\t<div className=\"Menu\">\n\t\t\t\t\t\t<BlockStyleControls\n\t\t\t\t\t\t\teditorState={editorState}\n\t\t\t\t\t\t\tonToggle={this.toggleBlockType}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<InlineStyleControls\n\t\t\t\t\t\t\teditorState={editorState}\n\t\t\t\t\t\t\tonToggle={this.toggleInlineStyle}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"RichEditor-controls TeXEditor-insert\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={this.insertTeX}\n\t\t\t\t\t\t\t\tclassName=\"math RichEditor-styleButton\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tMath\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<ModalTable\n\t\t\t\t\t\t\t\tonClick={this.createTable}\n\t\t\t\t\t\t\t\tbuttonLabel=\"Table\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={convertToTeX}\n\t\t\t\t\t\t\t\tclassName=\"save\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tpreview\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* eslint-disable-next-line max-len */}\n\t\t\t\t\t{/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n\t\t\t\t\t<div className={className} onClick={this.focus}>\n\t\t\t\t\t\t<Editor\n\t\t\t\t\t\t\tblockRendererFn={this.blockRenderer}\n\t\t\t\t\t\t\tblockStyleFn={getBlockStyle}\n\t\t\t\t\t\t\tcustomStyleMap={styleMap}\n\t\t\t\t\t\t\teditorState={editorState}\n\t\t\t\t\t\t\thandleKeyCommand={this.handleKeyCommand}\n\t\t\t\t\t\t\tkeyBindingFn={this.mapKeyToEditorCommand}\n\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\tplaceholder=\"Tell a story...\"\n\t\t\t\t\t\t\treadOnly={this.state.liveTeXEdits.count()}\n\t\t\t\t\t\t\tref={this.editorRef}\n\t\t\t\t\t\t\tspellCheck\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"tex\">\n\t\t\t\t\t<p className=\"compiled\">% LaTeX code will appear below...</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst texMap = {\n\t'header-one': '\\\\section',\n\t'header-two': '\\\\subsection',\n\t'header-three': '\\\\subsubsection',\n\tBOLD: '\\\\textbf',\n\tITALIC: '\\\\textit',\n\tUNDERLINE: '\\\\underline',\n\tCODE: '\\\\texttt',\n}\n\n// Custom overrides for \"code\" style.\nconst styleMap = {\n\tCODE: {\n\t\tbackgroundColor: 'rgba(0, 0, 0, 0.05)',\n\t\tfontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n\t\tfontSize: 16,\n\t\tpadding: 2,\n\t},\n}\n\nfunction getBlockStyle(block) {\n\tswitch (block.getType()) {\n\tcase 'blockquote':\n\t\treturn 'RichEditor-blockquote'\n\tdefault:\n\t\treturn null\n\t}\n}\n\nconst StyleButton = (props) => {\n\tconst onToggle = (e) => {\n\t\te.preventDefault()\n\t\tprops.onToggle(props.style)\n\t}\n\tlet className = 'RichEditor-styleButton'\n\tif (props.active) {\n\t\tclassName += ' RichEditor-activeButton'\n\t}\n\n\treturn (\n\t\t// eslint-disable-next-line jsx-a11y/no-static-element-interactions\n\t\t<span className={className} onMouseDown={onToggle}>\n\t\t\t{props.label}\n\t\t</span>\n\t)\n}\n\nconst BLOCK_TYPES = [\n\t{ label: 'H1', style: 'header-one' },\n\t{ label: 'H2', style: 'header-two' },\n\t{ label: 'H3', style: 'header-three' },\n\t// {label: 'H4', style: 'header-four'},\n\t// {label: 'H5', style: 'header-five'},\n\t// {label: 'H6', style: 'header-six'},\n\t// {label: 'Blockquote', style: 'blockquote'},\n\t// {label: 'UL', style: 'unordered-list-item'},\n\t// {label: 'OL', style: 'ordered-list-item'},\n\t// {label: 'Code Block', style: 'code-block'},\n]\n\nconst BlockStyleControls = (props) => {\n\tconst { editorState } = props\n\tconst selection = editorState.getSelection()\n\tconst blockType = editorState\n\t\t.getCurrentContent()\n\t\t.getBlockForKey(selection.getStartKey())\n\t\t.getType()\n\n\treturn (\n\t\t<div className=\"RichEditor-controls\">\n\t\t\t{BLOCK_TYPES.map((type) => (\n\t\t\t\t<StyleButton\n\t\t\t\t\tkey={type.label}\n\t\t\t\t\tactive={type.style === blockType}\n\t\t\t\t\tlabel={type.label}\n\t\t\t\t\tonToggle={props.onToggle}\n\t\t\t\t\tstyle={type.style}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nconst INLINE_STYLES = [\n\t{ label: 'Bold', style: 'BOLD' },\n\t{ label: 'Italic', style: 'ITALIC' },\n\t{ label: 'Underline', style: 'UNDERLINE' },\n\t{ label: 'Monospace', style: 'CODE' },\n]\n\nconst InlineStyleControls = (props) => {\n\tconst currentStyle = props.editorState.getCurrentInlineStyle()\n\n\treturn (\n\t\t<div className=\"RichEditor-controls\">\n\t\t\t{INLINE_STYLES.map((type) => (\n\t\t\t\t<StyleButton\n\t\t\t\t\tkey={type.label}\n\t\t\t\t\tactive={currentStyle.has(type.style)}\n\t\t\t\t\tlabel={type.label}\n\t\t\t\t\tonToggle={props.onToggle}\n\t\t\t\t\tstyle={type.style}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default RichTextEditor\n","import React from 'react'\nimport './App.css'\nimport RichTextEditor from './components/RichTextEditor'\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<RichTextEditor />\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}