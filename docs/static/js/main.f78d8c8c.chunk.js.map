{"version":3,"sources":["components/baseUrl/baseUrl.js","components/Auth.js","components/TeX/TeXBlock.js","components/Table/TableBlock.js","components/BlockComponent.js","components/TeX/modifiers/removeTeXBlock.js","components/TeX/modifiers/insertTeXBlock.js","components/Table/ModalTable.js","components/Table/modifiers/createTable.js","components/convertContent/convert.js","components/RichTextEditor.js","components/previewPDF/preview.js","components/Header.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","Auth","props","React","useState","username","setUsername","password","setPassword","response","setResponse","type","onChange","event","target","value","onClick","state","fetch","method","headers","body","JSON","stringify","then","res","json","result","console","log","status","localStorage","setItem","login","token","KaTexOutput","content","container","useRef","prevProps","ref","useEffect","current","usePrevious","katex","render","displayMode","TeXBlock","editMode","textareaRef","createRef","setState","texValue","getValue","startEdit","onValueChange","evt","invalid","__parse","e","invalidTeX","save","entityKey","block","getEntityAt","newContentState","contentState","mergeEntityData","finishEdit","bind","remove","blockProps","onRemove","getKey","onStartEdit","onFinishTeXEdit","this","getEntity","getData","texContent","className","editPanel","buttonClass","disabled","Component","TableOutput","row","column","caption","cell","rows","rowsTh","colsTh","coordinate","setCoordinate","i","push","key","cols","j","id","trTarget","contentEditable","onBlur","x","y","innerHTML","onFinishTableEdit","TableBlock","shape","BlockComponent","media","getType","removeTeXBlock","editorState","blockKey","getCurrentContent","getBlockForKey","targetRange","SelectionState","anchorKey","anchorOffset","focusKey","focusOffset","getLength","withoutTeX","Modifier","removeRange","resetBlock","setBlockType","getSelectionAfter","newState","EditorState","forceSelection","insertTeXBlock","contentStateWithEntity","createEntity","getLastCreatedEntityKey","newEditorState","set","currentContent","AtomicBlockUtils","insertAtomicBlock","tableShape","ModalTable","buttonLabel","modal","setModal","toggle","color","Modal","isOpen","ModalHeader","ModalBody","href","ModalFooter","Button","createTable","length","Object","fromEntries","Array","from","_","allTeX","texMap","BOLD","ITALIC","UNDERLINE","CODE","convertToTeX","editorContentRaw","convertToRaw","offset","someTeX","blocks","Math","someMath","entityMap","keys","values","data","count","k","TeX","styledStartOffset","someTeXInlineStyleSort","someTeXInline","inlineStyleRanges","o","sort","a","b","text","startOffset","styledTextLength","textStyle","style","slice","RichTextEditor","blockRenderer","component","editable","liveCustomBlockEdits","createWithContent","removeTeX","insertTeX","prevState","Map","createEmpty","editorRef","focus","handleKeyCommand","mapKeyToEditorCommand","toggleBlockType","toggleInlineStyle","command","RichUtils","keyCode","getDefaultKeyBinding","onTab","blockType","inlineStyle","hasText","getBlockMap","first","isMobile","onToggle","store","opts","Authorization","postData","setTimeout","blob","fileURL","URL","createObjectURL","document","getElementById","src","getPDF","blockRendererFn","blockStyleFn","getBlockStyle","customStyleMap","styleMap","keyBindingFn","placeholder","readOnly","spellCheck","title","width","height","backgroundColor","fontFamily","fontSize","padding","StyleButton","active","onMouseDown","preventDefault","label","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getStartKey","map","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","Header","logOut","Main","setLogin","setStore","storeCollector","localStore","parse","getItem","removeItem","Editor","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f78d8c8c.chunk.js","sourcesContent":["const baseUrl = 'http://139.196.180.153:3000/'\n\nexport default baseUrl\n","import React from 'react'\nimport baseUrl from './baseUrl/baseUrl'\n\nconst Auth = ({ props }) => {\n\tconst [username, setUsername] = React.useState('')\n\tconst [password, setPassword] = React.useState('')\n\tconst [response, setResponse] = React.useState(false)\n\n\tfunction signUp() {\n\t\tconst state = {\n\t\t\tusername, password,\n\t\t}\n\t\tfetch(`${baseUrl}users/signup`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(state),\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tres.json()\n\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\tconsole.log('result', result)\n\t\t\t\t\t\tsetResponse(result.status)\n\t\t\t\t\t\tconsole.log('state.response: ', response)\n\t\t\t\t\t})\n\t\t\t})\n\t}\n\n\tfunction logIn() {\n\t\tconst state = {\n\t\t\tusername, password,\n\t\t}\n\t\tfetch(`${baseUrl}users/login`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(state),\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tres.json()\n\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\tconsole.log('result', result)\n\t\t\t\t\t\tsetResponse(result.status)\n\t\t\t\t\t\tconsole.log('state.response: ', response)\n\t\t\t\t\t\tlocalStorage.setItem('login', JSON.stringify({\n\t\t\t\t\t\t\tlogin: true,\n\t\t\t\t\t\t\ttoken: result.token,\n\t\t\t\t\t\t}))\n\t\t\t\t\t\tprops()\n\t\t\t\t\t})\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonChange={\n\t\t\t\t\t\t(event) => setUsername(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tonChange={\n\t\t\t\t\t\t(event) => setPassword(event.target.value)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<button type=\"submit\" onClick={signUp}>Signup</button>\n\t\t\t</div>\n\t\t\t<br />\n\t\t\t<br />\n\t\t\t<div>\n\t\t\t\t<input type=\"text\" onChange={(event) => setUsername(event.target.value)} />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<input type=\"password\" onChange={(event) => setPassword(event.target.value)} />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<button type=\"submit\" onClick={logIn}>Login</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Auth\n","import katex from 'katex'\nimport React from 'react'\n\nconst KaTexOutput = ({ content, onClick }) => {\n\tconst container = React.useRef(null)\n\tconst prevProps = usePrevious(content)\n\n\tReact.useEffect(() => {\n\t\tif (prevProps !== content) {\n\t\t\tupdate()\n\t\t}\n\t})\n\n\tfunction usePrevious(value) {\n\t\tconst ref = React.useRef(null)\n\t\tReact.useEffect(() => {\n\t\t\tref.current = value\n\t\t})\n\t\treturn ref.current\n\t}\n\n\tfunction update() {\n\t\tkatex.render(\n\t\t\tcontent,\n\t\t\tcontainer.current,\n\t\t\t{ displayMode: true },\n\t\t)\n\t}\n\n\treturn <div ref={container} onClick={onClick} />\n}\n\nclass TeXBlock extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = { editMode: false }\n\t\tthis.textareaRef = React.createRef()\n\n\t\tthis.onClick = () => {\n\t\t\tif (this.state.editMode) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\teditMode: true,\n\t\t\t\ttexValue: this.getValue(),\n\t\t\t}, () => {\n\t\t\t\tthis.startEdit()\n\t\t\t})\n\t\t}\n\n\t\tthis.onValueChange = (evt) => {\n\t\t\tconst { value } = evt.target\n\t\t\tlet invalid = false\n\t\t\ttry {\n\t\t\t\tkatex.__parse(value)\n\t\t\t} catch (e) {\n\t\t\t\tinvalid = true\n\t\t\t} finally {\n\t\t\t\tthis.setState({\n\t\t\t\t\tinvalidTeX: invalid,\n\t\t\t\t\ttexValue: value,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tthis.save = () => {\n\t\t\tconst entityKey = this.props.block.getEntityAt(0)\n\t\t\tconst newContentState = this.props.contentState.mergeEntityData(\n\t\t\t\tentityKey,\n\t\t\t\t{ content: this.state.texValue },\n\t\t\t)\n\t\t\tthis.setState({\n\t\t\t\tinvalidTeX: false,\n\t\t\t\teditMode: false,\n\t\t\t\ttexValue: null,\n\t\t\t}, this.finishEdit.bind(this, newContentState))\n\t\t}\n\n\t\tthis.remove = () => {\n\t\t\tthis.props.blockProps.onRemove(this.props.block.getKey())\n\t\t}\n\t\tthis.startEdit = () => {\n\t\t\tthis.props.blockProps.onStartEdit(this.props.block.getKey())\n\t\t}\n\t\tthis.finishEdit = (newContentState) => {\n\t\t\tthis.props.blockProps.onFinishTeXEdit(\n\t\t\t\tthis.props.block.getKey(),\n\t\t\t\tnewContentState,\n\t\t\t)\n\t\t}\n\t}\n\n\tgetValue() {\n\t\treturn this.props.contentState\n\t\t\t.getEntity(this.props.block.getEntityAt(0))\n\t\t\t.getData().content\n\t}\n\n\trender() {\n\t\tlet texContent = null\n\t\tif (this.state.editMode) {\n\t\t\tif (this.state.invalidTeX) {\n\t\t\t\ttexContent = ''\n\t\t\t} else {\n\t\t\t\ttexContent = this.state.texValue\n\t\t\t}\n\t\t} else {\n\t\t\ttexContent = this.getValue()\n\t\t}\n\n\t\tlet className = 'TeXEditor-tex'\n\t\tif (this.state.editMode) {\n\t\t\tclassName += ' TeXEditor-activeTeX'\n\t\t}\n\n\t\tlet editPanel = null\n\t\tif (this.state.editMode) {\n\t\t\tlet buttonClass = 'TeXEditor-saveButton'\n\t\t\tif (this.state.invalidTeX) {\n\t\t\t\tbuttonClass += ' TeXEditor-invalidButton'\n\t\t\t}\n\n\t\t\teditPanel = (\n\t\t\t\t<div className=\"TeXEditor-panel\">\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"TeXEditor-texValue\"\n\t\t\t\t\t\tonChange={this.onValueChange}\n\t\t\t\t\t\tref={this.textareaRef.current}\n\t\t\t\t\t\tvalue={this.state.texValue}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"TeXEditor-buttons\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={buttonClass}\n\t\t\t\t\t\t\tdisabled={this.state.invalidTeX}\n\t\t\t\t\t\t\tonClick={this.save}\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.state.invalidTeX ? 'Invalid TeX' : 'Done'}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"TeXEditor-removeButton\"\n\t\t\t\t\t\t\tonClick={this.remove}\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRemove\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={className}>\n\t\t\t\t<KaTexOutput content={texContent} onClick={this.onClick} />\n\t\t\t\t{editPanel}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default TeXBlock\n","import React from 'react'\n\nconst TableOutput = (props) => {\n\tconst {\n\t\trow, column, caption, cell, block, blockProps,\n\t} = props\n\tconst container = React.useRef(null)\n\n\t/**\n\t * if rowNum === 1\n\t *  tBody = (thead>tr>th*colNum{heading $})\n\t *      +\n\t *          (tbody>tr*rowNum - 1>td*colNum{cell $})\n\t * else\n\t *  tBody = tbody>tr*rowNum>td*colNum{cell $}\n\t */\n\n\tconst rows = []\n\tconst rowsTh = []\n\tconst colsTh = []\n\n\tconst [coordinate, setCoordinate] = React.useState([])\n\n\tfunction handleClick(evt) {\n\t\tconst trTarget = evt.target\n\t\tblockProps.onStartEdit(block.getKey())\n\t\ttrTarget.contentEditable = true\n\t}\n\n\tfunction handleBlur(evt) {\n\t\tconst trTarget = evt.target\n\t\ttrTarget.contentEditable = false\n\n\t\t// find the coordinate of the node clicked\n\t\tconst x = coordinate[0]\n\t\tconst y = coordinate[1]\n\n\t\t// update shape.cell[x][y]\n\t\tcell[x][y] = trTarget.innerHTML\n\t\tblockProps.onFinishTableEdit(block.getKey())\n\t}\n\n\t// colsTh\n\tfor (let i = 0; i < column; i += 1) {\n\t\tcolsTh.push(<th key={i}>{cell[0][i]}</th>)\n\t}\n\n\t// rowsTh\n\trowsTh.push(\n\t\t// TODO key-1\n\t\t<thead key=\"hhh\">\n\t\t\t<tr>{colsTh}</tr>\n\t\t</thead>,\n\t)\n\n\t// tbody\n\tif (row > 1) {\n\t\tfor (let i = 1; i < row; i += 1) {\n\t\t\tconst cols = [] // look out, it's local in for loop, not out like @row\n\t\t\tfor (let j = 0; j < column; j += 1) {\n\t\t\t\tcols.push(\n\t\t\t\t\t// eslint-disable-next-line max-len\n\t\t\t\t\t// eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions\n\t\t\t\t\t<td\n\t\t\t\t\t\tkey={i + j} // TODO key-2\n\t\t\t\t\t\tonClick={() => setCoordinate([i, j])}\n\t\t\t\t\t\tid={`Tooltip-${i + j}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{cell[i][j]}\n\t\t\t\t\t</td>,\n\t\t\t\t)\n\t\t\t}\n\t\t\trows.push(<tr key={i}>{cols}</tr>) // TODO key-3\n\t\t}\n\t}\n\n\treturn (\n\t\t// eslint-disable-next-line max-len\n\t\t// eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions\n\t\t<table className=\"hoverTable\" onClick={handleClick} ref={container} onBlur={handleBlur}>\n\t\t\t<caption>{caption}</caption>\n\t\t\t{rowsTh}\n\t\t\t<tbody>{rows}</tbody>\n\t\t</table>\n\t)\n}\n\nconst TableBlock = (props) => {\n\tconst { contentState, block, blockProps } = props\n\n\tconst entity = contentState.getEntity(\n\t\tblock.getEntityAt(0),\n\t)\n\tconst shape = entity.getData()\n\n\treturn (\n\t\t<TableOutput\n\t\t\trow={shape.row}\n\t\t\tcolumn={shape.column}\n\t\t\tcaption={shape.caption}\n\t\t\tcell={shape.cell}\n\t\t\tblock={block}\n\t\t\tblockProps={blockProps}\n\t\t/>\n\t)\n}\n\nexport default TableBlock\n","import React from 'react'\nimport TeXBlock from './TeX/TeXBlock'\nimport TableBlock from './Table/TableBlock'\n\nconst BlockComponent = (props) => {\n\tconst entity = props.contentState.getEntity(\n\t\tprops.block.getEntityAt(0),\n\t)\n\tconst type = entity.getType()\n\n\tlet media\n\tif (type === 'TOKEN') {\n\t\tmedia = (\n\t\t\t<TeXBlock\n\t\t\t\tblockProps={props.blockProps}\n\t\t\t\tblock={props.block}\n\t\t\t\tcontentState={props.contentState}\n\t\t\t/>\n\t\t)\n\t} else if (type === 'TABLE') {\n\t\tmedia = (\n\t\t\t<TableBlock\n\t\t\t\tblockProps={props.blockProps}\n\t\t\t\tblock={props.block}\n\t\t\t\tcontentState={props.contentState}\n\t\t\t/>\n\t\t)\n\t}\n\n\treturn media\n}\n\nexport default BlockComponent\n","import { EditorState, Modifier, SelectionState } from 'draft-js'\n\nfunction removeTeXBlock(editorState, blockKey) {\n\tconst content = editorState.getCurrentContent()\n\tconst block = content.getBlockForKey(blockKey)\n\n\tconst targetRange = new SelectionState({\n\t\tanchorKey: blockKey,\n\t\tanchorOffset: 0,\n\t\tfocusKey: blockKey,\n\t\tfocusOffset: block.getLength(),\n\t})\n\n\tconst withoutTeX = Modifier.removeRange(content, targetRange, 'backward')\n\tconst resetBlock = Modifier.setBlockType(\n\t\twithoutTeX,\n\t\twithoutTeX.getSelectionAfter(),\n\t\t'unstyled',\n\t)\n\n\tconst newState = EditorState.push(editorState, resetBlock, 'remove-range')\n\treturn EditorState.forceSelection(newState, resetBlock.getSelectionAfter())\n}\n\nexport default removeTeXBlock\n","import {\n\tAtomicBlockUtils,\n\tEditorState,\n} from 'draft-js'\n\nconst examples = '\\\\LaTeX'\n\nfunction insertTeXBlock(editorState) {\n\tconst contentState = editorState.getCurrentContent()\n\tconst contentStateWithEntity = contentState.createEntity(\n\t\t'TOKEN',\n\t\t'IMMUTABLE',\n\t\t{ content: examples },\n\t)\n\tconst entityKey = contentStateWithEntity.getLastCreatedEntityKey()\n\tconst newEditorState = EditorState.set(\n\t\teditorState,\n\t\t{ currentContent: contentStateWithEntity },\n\t)\n\treturn AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, ' ')\n}\n\nexport default insertTeXBlock\n","import React, { useState } from 'react'\nimport {\n\tButton, Modal, ModalHeader, ModalBody, ModalFooter,\n\t// Col, Row, Form, FormGroup, Label, Input,\n} from 'reactstrap'\n\nexport const tableShape = []\n\nconst ModalTable = (props) => {\n\tconst {\n\t\tbuttonLabel,\n\t\tclassName,\n\t\t// onClick,\n\t} = props\n\n\tconst [modal, setModal] = useState(false)\n\t// const rowRef = React.useRef(null)\n\t// const columnRef = React.useRef(null)\n\t// const captionRef = React.useRef(null)\n\n\tconst toggle = () => setModal(!modal)\n\n\t// const handleClick = () => {\n\t// \tconst tableData = {\n\t// \t\trow: rowRef.current.value,\n\t// \t\tcolumn: columnRef.current.value,\n\t// \t\tcaption: captionRef.current.value,\n\t// \t}\n\t// \ttableShape.push(tableData)\n\t// \tonClick()\n\t// \ttoggle()\n\t// }\n\n\treturn (\n\t\t<>\n\t\t\t<button color=\"danger\" onClick={toggle} type=\"button\" className=\"math RichEditor-styleButton\">{buttonLabel}</button>\n\t\t\t<Modal isOpen={modal} toggle={toggle} className={className}>\n\t\t\t\t<ModalHeader toggle={toggle}>\n\t\t\t\t\tTips: &nbsp;the table feature has not finished yet.\n\t\t\t\t</ModalHeader>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tYou can use &nbsp;\n\t\t\t\t\t\t<a href=\"https://www.tablesgenerator.com/\">tables generator</a>\n\t\t\t\t\t\t&nbsp; or &nbsp;\n\t\t\t\t\t\t<a href=\"https://ctan.org/pkg/excel2latex?lang=en\">excel2latex</a>\n\t\t\t\t\t\t&nbsp; to create a table and then click &nbsp;\n\t\t\t\t\t\t<b>Math</b>\n\t\t\t\t\t\t&nbsp; button to insert a table.\n\t\t\t\t\t</p>\n\n\t\t\t\t\t{/* not finished yet */\n\t\t\t\t\t/* <Form>\n\t\t\t\t\t\t<Row form>\n\t\t\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t<Label for=\"tableRow\">Row</Label>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"row\"\n\t\t\t\t\t\t\t\t\t\tid=\"tableRow\"\n\t\t\t\t\t\t\t\t\t\tinnerRef={rowRef}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t<Label for=\"tableColumn\">Column</Label>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"column\"\n\t\t\t\t\t\t\t\t\t\tid=\"tableColumn\"\n\t\t\t\t\t\t\t\t\t\tinnerRef={columnRef}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row form>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t<Label for=\"tableTitle\">Title</Label>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\t\t\tid=\"tableTitle\"\n\t\t\t\t\t\t\t\t\t\tinnerRef={captionRef}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Form> */ }\n\t\t\t\t</ModalBody>\n\t\t\t\t<ModalFooter>\n\t\t\t\t\t<Button color=\"primary\" onClick={toggle}>\n\t\t\t\t\t\tgot it\n\t\t\t\t\t</Button>\n\t\t\t\t\t{/* <Button color=\"primary\" onClick={handleClick}> */}\n\t\t\t\t\t{/*\tYes */}\n\t\t\t\t\t{/* </Button> */}\n\t\t\t\t\t{/* {' '} */}\n\t\t\t\t\t{/* <Button color=\"secondary\" onClick={toggle}>Cancel</Button> */}\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t</>\n\t)\n}\n\nexport default ModalTable\n","import {\n\tAtomicBlockUtils,\n\tEditorState,\n} from 'draft-js'\n\nimport { tableShape } from '../ModalTable'\n\nfunction createTable(editorState) {\n\tconst contentState = editorState.getCurrentContent()\n\tconst { row, column, caption } = tableShape[tableShape.length - 1]\n\t/**\n\t * cell = {\n\t *     0: [\"cell-0,0\", \"cell-0,1\", ..., \"cell-0,m\"],\n\t *     1: [\"cell-1,0\", \"cell-1,1\", ..., \"cell-1,m\"],\n\t *     ...,\n\t *     n: [\"cell-n,0\", \"cell-n,1\", ..., \"cell-n,m\"],\n\t * }\n\t */\n\tconst cell = Object.fromEntries(Array.from(\n\t\t{ length: row },\n\t\t// eslint-disable-next-line no-shadow\n\t\t(_, i) => [i, Array.from({ length: column }, (_, j) => `cell-${i},${j}`)],\n\t))\n\n\tconst contentStateWithEntity = contentState.createEntity(\n\t\t'TABLE',\n\t\t'IMMUTABLE',\n\t\t{\n\t\t\trow, column, caption, cell,\n\t\t},\n\t)\n\tconst entityKey = contentStateWithEntity.getLastCreatedEntityKey()\n\tconst newEditorState = EditorState.set(\n\t\teditorState,\n\t\t{ currentContent: contentStateWithEntity },\n\t)\n\treturn AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, ' ')\n}\n\nexport default createTable\n","import { convertToRaw } from 'draft-js'\n\nexport const allTeX = []\n\nconst convertToTeX = (contentState) => {\n\tconst editorContentRaw = convertToRaw(contentState)\n\n\tallTeX.length = 0\n\tlet offset = 0\n\tlet length = 0\n\tconst someTeX = editorContentRaw.blocks\n\tconst Math = []\n\tconst someMath = editorContentRaw.entityMap\n\n\t// Blocks Processing\n\tif (Object.keys(someMath).length) {\n\t\tfor (let i = 0; i < Object.keys(someMath).length; i += 1) { // Iterating <entityMap> ...\n\t\t\tif (someMath[i].type === 'TOKEN') {\n\t\t\t\tMath.push(Object.values(someMath)[i].data.content)\n\t\t\t} else if (someMath[i].type === 'TABLE') {\n\t\t\t\t// TODO table\n\n\t\t\t\tMath.push('sorry, but the table feature has not finished !!!')\n\t\t\t}\n\t\t}\n\t}\n\n\tlet count = 0\n\n\t/**\n\t * TODO optimization\n\t *  -- Oops!!!\n\t *  O(n^3) algorithm\n\t */\n\n\tfor (let k = 0; k < someTeX.length; k += 1) { // Iterating <blocks> ...\n\t\tlet TeX = ''\n\t\tconst styledStartOffset = []\n\t\tconst\n\t\t\tsomeTeXInlineStyleSort = []\n\t\tconst someTeXInline = someTeX[k].inlineStyleRanges\n\n\t\tfor (let i = 0; i < someTeXInline.length; i += 1) {\n\t\t\tconst o = someTeXInline[i].offset\n\t\t\tstyledStartOffset.push(o)\n\t\t}\n\n\t\tstyledStartOffset.sort((a, b) => a - b)\n\n\t\tfor (let i = 0; i < styledStartOffset.length; i += 1) {\n\t\t\tfor (let j = 0; j < Object.values(someTeXInline).length; j += 1) {\n\t\t\t\tif (Object.values(someTeXInline)[j].offset === styledStartOffset[i]) {\n\t\t\t\t\tsomeTeXInlineStyleSort.push(Object.values(someTeXInline)[j])\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * ** text split algorithm **\n\t\t * split with inlineStyledText offset and its length\n\t\t */\n\n\t\tif (someTeXInline.length === 0) {\n\t\t\tif (someTeX[k].type === 'unstyled') {\n\t\t\t\tTeX += someTeX[k].text\n\t\t\t} else if (someTeX[k].type === 'atomic') {\n\t\t\t\tsomeTeX[k].text = Math[count]\n\t\t\t\tTeX += someTeX[k].text\n\t\t\t\tcount += 1\n\t\t\t} else {\n\t\t\t\tTeX += `${texMap[someTeX[k].type]}{${someTeX[k].text}}`\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i = 0; i < someTeXInlineStyleSort.length; i += 1) {\n\t\t\t\tconst startOffset = styledStartOffset[i]\n\t\t\t\tconst styledTextLength = someTeXInlineStyleSort[i].length\n\t\t\t\tconst textStyle = someTeXInlineStyleSort[i].style\n\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tTeX += someTeX[k].text.slice(0, startOffset)\n\t\t\t\t} else {\n\t\t\t\t\tTeX += someTeX[k].text.slice(offset + length, startOffset)\n\t\t\t\t}\n\t\t\t\tTeX += `${texMap[textStyle]}{${someTeX[k].text.slice(startOffset, startOffset + styledTextLength)}}`\n\n\t\t\t\tif (i === someTeXInlineStyleSort.length - 1) {\n\t\t\t\t\tTeX += `${someTeX[k].text.slice(startOffset + styledTextLength)}`\n\t\t\t\t}\n\t\t\t\toffset = startOffset\n\t\t\t\tlength = styledTextLength\n\t\t\t}\n\t\t}\n\n\t\tallTeX.push(TeX)\n\t}\n}\n\nconst texMap = {\n\t'header-one': '\\\\section',\n\t'header-two': '\\\\subsection',\n\t'header-three': '\\\\subsubsection',\n\tBOLD: '\\\\textbf',\n\tITALIC: '\\\\textit',\n\tUNDERLINE: '\\\\underline',\n\tCODE: '\\\\texttt',\n}\n\nexport default convertToTeX\n","import React from 'react'\nimport {\n\tEditor, EditorState, getDefaultKeyBinding, RichUtils,\n} from 'draft-js'\nimport './RichTextEditor.css'\nimport 'draft-js/dist/Draft.css'\nimport { Map } from 'immutable'\nimport { isMobile } from 'react-device-detect'\nimport BlockComponent from './BlockComponent'\nimport removeTeXBlock from './TeX/modifiers/removeTeXBlock'\nimport insertTeXBlock from './TeX/modifiers/insertTeXBlock'\nimport createTable from './Table/modifiers/createTable'\nimport ModalTable from './Table/ModalTable'\nimport convertToTeX, { allTeX } from './convertContent/convert'\nimport { postData, getPDF } from './previewPDF/preview'\nimport './TeX/TeXEditor.css'\nimport './Table/Table.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n/**\n * Editor Template and KaTeX support are all referenced to Draft.js official example.\n */\n\nclass RichTextEditor extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\teditorState: EditorState.createEmpty(),\n\t\t\tliveCustomBlockEdits: Map(),\n\t\t\tdata: {},\n\t\t}\n\n\t\tthis.editorRef = React.createRef()\n\t\tthis.focus = () => this.editorRef.current.focus()\n\t\tthis.onChange = (editorState) => this.setState({ editorState })\n\n\t\tthis.handleKeyCommand = this.handleKeyCommand.bind(this)\n\t\tthis.mapKeyToEditorCommand = this.mapKeyToEditorCommand.bind(this)\n\t\tthis.toggleBlockType = this.toggleBlockType.bind(this)\n\t\tthis.toggleInlineStyle = this.toggleInlineStyle.bind(this)\n\t}\n\n\tblockRenderer = (block) => {\n\t\tif (block.getType() === 'atomic') {\n\t\t\treturn {\n\t\t\t\tcomponent: BlockComponent,\n\t\t\t\teditable: false,\n\t\t\t\tprops: {\n\t\t\t\t\tonStartEdit: (blockKey) => {\n\t\t\t\t\t\tconst { liveCustomBlockEdits } = this.state\n\t\t\t\t\t\tthis.setState({ liveCustomBlockEdits: liveCustomBlockEdits.set(blockKey, true) })\n\t\t\t\t\t},\n\t\t\t\t\tonFinishTeXEdit: (blockKey, newContentState) => {\n\t\t\t\t\t\tconst { liveCustomBlockEdits } = this.state\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tliveCustomBlockEdits: liveCustomBlockEdits.remove(blockKey),\n\t\t\t\t\t\t\teditorState: EditorState.createWithContent(newContentState),\n\t\t\t\t\t\t})\n\t\t\t\t\t},\n\t\t\t\t\tonFinishTableEdit: (blockKey) => {\n\t\t\t\t\t\tconst { liveCustomBlockEdits } = this.state\n\t\t\t\t\t\tthis.setState({ liveCustomBlockEdits: liveCustomBlockEdits.remove(blockKey) })\n\t\t\t\t\t},\n\t\t\t\t\tonRemove: (blockKey) => this.removeTeX(blockKey),\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\t\treturn null\n\t};\n\n\tonChange = (editorState) => this.setState({ editorState });\n\n\tremoveTeX = (blockKey) => {\n\t\tconst { editorState, liveCustomBlockEdits } = this.state\n\t\tthis.setState({\n\t\t\tliveCustomBlockEdits: liveCustomBlockEdits.remove(blockKey),\n\t\t\teditorState: removeTeXBlock(editorState, blockKey),\n\t\t})\n\t};\n\n\tinsertTeX = () => {\n\t\tthis.setState((prevState) => ({\n\t\t\tliveCustomBlockEdits: Map(),\n\t\t\teditorState: insertTeXBlock(prevState.editorState),\n\t\t}))\n\t};\n\n\tcreateTable = () => {\n\t\tthis.setState((prevState) => ({\n\t\t\teditorState: createTable(prevState.editorState),\n\t\t}))\n\t}\n\n\thandleKeyCommand(command, editorState) {\n\t\tconst newState = RichUtils.handleKeyCommand(editorState, command)\n\t\tif (newState) {\n\t\t\tthis.onChange(newState)\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tmapKeyToEditorCommand(e) {\n\t\tif (e.keyCode === 9 /* TAB */) {\n\t\t\tconst newEditorState = RichUtils.onTab(\n\t\t\t\te,\n\t\t\t\tthis.state.editorState,\n\t\t\t\t4, /* maxDepth */\n\t\t\t)\n\t\t\tif (newEditorState !== this.state.editorState) {\n\t\t\t\tthis.onChange(newEditorState)\n\t\t\t}\n\t\t\treturn\n\t\t}\n\t\t// eslint-disable-next-line consistent-return\n\t\treturn getDefaultKeyBinding(e)\n\t}\n\n\ttoggleBlockType(blockType) {\n\t\tthis.onChange(\n\t\t\tRichUtils.toggleBlockType(\n\t\t\t\tthis.state.editorState,\n\t\t\t\tblockType,\n\t\t\t),\n\t\t)\n\t}\n\n\ttoggleInlineStyle(inlineStyle) {\n\t\tthis.onChange(\n\t\t\tRichUtils.toggleInlineStyle(\n\t\t\t\tthis.state.editorState,\n\t\t\t\tinlineStyle,\n\t\t\t),\n\t\t)\n\t}\n\n\trender() {\n\t\tconst { editorState } = this.state\n\n\t\t// If the user changes block type before entering any text, we can\n\t\t// either style the placeholder or hide it. Let's just hide it now.\n\t\tlet className = 'RichEditor-editor'\n\t\tconst contentState = editorState.getCurrentContent()\n\t\tif (!contentState.hasText()) {\n\t\t\tif (contentState.getBlockMap().first().getType() !== 'unstyled') {\n\t\t\t\tclassName += ' RichEditor-hidePlaceholder'\n\t\t\t}\n\t\t}\n\n\t\tconst loadPDF = () => {\n\t\t\tconvertToTeX(contentState)\n\t\t\tthis.setState({\n\t\t\t\tdata: allTeX,\n\t\t\t}, () => {\n\t\t\t\t/**\n\t\t\t\t * TODO load pdf\n\t\t\t\t *  if and only if\n\t\t\t\t *      - [x] this.state.data is not empty\n\t\t\t\t *      - [ ] and not equal to prevState.data\n\t\t\t\t */\n\n\t\t\t\tif (this.state.data[0].length !== 0) { // its initial value is [''], which is a empty string\n\t\t\t\t\tpostData(this.props.store, this.state.data)\n\t\t\t\t\tsetTimeout(() => getPDF(this.props.store), 30000)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Nothing you wrote')\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (isMobile) {\n\t\t\treturn (\n\t\t\t\t<p>\n\t\t\t\t\tSorry, but\n\t\t\t\t\t&nbsp;\n\t\t\t\t\t<b>Eorg</b>\n\t\t\t\t\t&nbsp;\n\t\t\t\t\thaven&#39;t support on Mobile, please open it on PC.\n\t\t\t\t</p>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"double-column\">\n\t\t\t\t<p>{this.state.response}</p>\n\t\t\t\t<div className=\"RichEditor-root\">\n\t\t\t\t\t<div className=\"Menu\">\n\t\t\t\t\t\t<BlockStyleControls\n\t\t\t\t\t\t\teditorState={editorState}\n\t\t\t\t\t\t\tonToggle={this.toggleBlockType}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<InlineStyleControls\n\t\t\t\t\t\t\teditorState={editorState}\n\t\t\t\t\t\t\tonToggle={this.toggleInlineStyle}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"RichEditor-controls TeXEditor-insert\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={this.insertTeX}\n\t\t\t\t\t\t\t\tclassName=\"math RichEditor-styleButton\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tMath\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<ModalTable\n\t\t\t\t\t\t\t\tonClick={this.createTable}\n\t\t\t\t\t\t\t\tbuttonLabel=\"Table\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={loadPDF}\n\t\t\t\t\t\t\t\tclassName=\"save\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tpreview\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* eslint-disable-next-line max-len */}\n\t\t\t\t\t{/* eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */}\n\t\t\t\t\t<div className={className} onClick={this.focus}>\n\t\t\t\t\t\t<Editor\n\t\t\t\t\t\t\tblockRendererFn={this.blockRenderer}\n\t\t\t\t\t\t\tblockStyleFn={getBlockStyle}\n\t\t\t\t\t\t\tcustomStyleMap={styleMap}\n\t\t\t\t\t\t\teditorState={editorState}\n\t\t\t\t\t\t\thandleKeyCommand={this.handleKeyCommand}\n\t\t\t\t\t\t\tkeyBindingFn={this.mapKeyToEditorCommand}\n\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\tplaceholder=\"Tell a story...\"\n\t\t\t\t\t\t\treadOnly={this.state.liveCustomBlockEdits.count()}\n\t\t\t\t\t\t\tref={this.editorRef}\n\t\t\t\t\t\t\tspellCheck\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<iframe\n\t\t\t\t\tid=\"pdf\"\n\t\t\t\t\ttitle=\"hello\"\n\t\t\t\t\twidth=\"47%\"\n\t\t\t\t\theight=\"300px\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n// Custom overrides for \"code\" style.\nconst styleMap = {\n\tCODE: {\n\t\tbackgroundColor: 'rgba(0, 0, 0, 0.05)',\n\t\tfontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n\t\tfontSize: 16,\n\t\tpadding: 2,\n\t},\n}\n\nfunction getBlockStyle(block) {\n\tswitch (block.getType()) {\n\tcase 'blockquote':\n\t\treturn 'RichEditor-blockquote'\n\tdefault:\n\t\treturn null\n\t}\n}\n\nconst StyleButton = (props) => {\n\tconst onToggle = (e) => {\n\t\te.preventDefault()\n\t\tprops.onToggle(props.style)\n\t}\n\tlet className = 'RichEditor-styleButton'\n\tif (props.active) {\n\t\tclassName += ' RichEditor-activeButton'\n\t}\n\n\treturn (\n\t\t// eslint-disable-next-line jsx-a11y/no-static-element-interactions\n\t\t<span className={className} onMouseDown={onToggle}>\n\t\t\t{props.label}\n\t\t</span>\n\t)\n}\n\nconst BLOCK_TYPES = [\n\t{ label: 'H1', style: 'header-one' },\n\t{ label: 'H2', style: 'header-two' },\n\t{ label: 'H3', style: 'header-three' },\n\t// {label: 'H4', style: 'header-four'},\n\t// {label: 'H5', style: 'header-five'},\n\t// {label: 'H6', style: 'header-six'},\n\t// {label: 'Blockquote', style: 'blockquote'},\n\t// {label: 'UL', style: 'unordered-list-item'},\n\t// {label: 'OL', style: 'ordered-list-item'},\n\t// {label: 'Code Block', style: 'code-block'},\n]\n\nconst BlockStyleControls = (props) => {\n\tconst { editorState } = props\n\tconst selection = editorState.getSelection()\n\tconst blockType = editorState\n\t\t.getCurrentContent()\n\t\t.getBlockForKey(selection.getStartKey())\n\t\t.getType()\n\n\treturn (\n\t\t<div className=\"RichEditor-controls\">\n\t\t\t{BLOCK_TYPES.map((type) => (\n\t\t\t\t<StyleButton\n\t\t\t\t\tkey={type.label}\n\t\t\t\t\tactive={type.style === blockType}\n\t\t\t\t\tlabel={type.label}\n\t\t\t\t\tonToggle={props.onToggle}\n\t\t\t\t\tstyle={type.style}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nconst INLINE_STYLES = [\n\t{ label: 'Bold', style: 'BOLD' },\n\t{ label: 'Italic', style: 'ITALIC' },\n\t{ label: 'Underline', style: 'UNDERLINE' },\n\t{ label: 'Monospace', style: 'CODE' },\n]\n\nconst InlineStyleControls = (props) => {\n\tconst currentStyle = props.editorState.getCurrentInlineStyle()\n\n\treturn (\n\t\t<div className=\"RichEditor-controls\">\n\t\t\t{INLINE_STYLES.map((type) => (\n\t\t\t\t<StyleButton\n\t\t\t\t\tkey={type.label}\n\t\t\t\t\tactive={currentStyle.has(type.style)}\n\t\t\t\t\tlabel={type.label}\n\t\t\t\t\tonToggle={props.onToggle}\n\t\t\t\t\tstyle={type.style}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default RichTextEditor\n","import baseUrl from '../baseUrl/baseUrl'\n\nexport const postData = (store, opts) => {\n\tconst token = `Bearer ${store.token}`\n\tfetch(`${baseUrl}draftJS`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: token,\n\t\t},\n\t\tbody: JSON.stringify(opts),\n\t})\n\t\t.then((res) => res.json())\n\t\t.then((data) => console.log('posted data:', data))\n}\n\nexport const getPDF = (store) => {\n\tconst token = `Bearer ${store.token}`\n\tfetch(`${baseUrl}draftJS`, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/pdf',\n\t\t\tAuthorization: token,\n\t\t},\n\t})\n\t\t.then((res) => {\n\t\t\tres.blob()\n\t\t\t\t.then((data) => {\n\t\t\t\t\tconst fileURL = URL.createObjectURL(data)\n\t\t\t\t\tconst pdf = document.getElementById('pdf')\n\t\t\t\t\tpdf.src = fileURL\n\t\t\t\t\t// window.open(fileURL)\n\t\t\t\t})\n\t\t})\n}\n","import React from 'react'\n\nconst Header = ({ logOut }) => {\n\treturn (\n\t\t<button type=\"submit\" onClick={logOut}>Logout</button>\n\t)\n}\n\nexport default Header\n","import React from 'react'\nimport Auth from './Auth'\nimport RichTextEditor from './RichTextEditor'\nimport Header from './Header'\nimport baseUrl from './baseUrl/baseUrl'\n\nconst Main = () => {\n\tconst [login, setLogin] = React.useState(false)\n\tconst [store, setStore] = React.useState(null)\n\n\tReact.useEffect(() => {\n\t\tstoreCollector()\n\t\tconsole.log('login', login)\n\t}, [login])\n\n\tfunction storeCollector() {\n\t\tconst localStore = JSON.parse(localStorage.getItem('login'))\n\n\t\tif (localStore && localStore.login) {\n\t\t\tsetLogin(true)\n\t\t\tsetStore(localStore)\n\t\t} else {\n\t\t\tsetLogin(false)\n\t\t\tsetStore(null)\n\t\t}\n\t}\n\n\tfunction logOut() {\n\t\tfetch(`${baseUrl}users/logout`, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tlocalStorage.removeItem('login')\n\t\t\t\tstoreCollector()\n\t\t\t})\n\t}\n\n\tconst Editor = () => (\n\t\t<div>\n\t\t\t<Header logOut={logOut} />\n\t\t\t<RichTextEditor store={store} />\n\t\t</div>\n\t)\n\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\t!login ? <Auth props={storeCollector} /> : <Editor />\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default Main\n","import React from 'react'\nimport './App.css'\nimport Main from './components/Main'\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Main />\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}